/**
 * Created by slowsay on 16/6/3.
 */
import React from 'react';
import { PixelRatio,Dimensions } from 'react-native';
const Utils = {
    ratio: PixelRatio.get(),
    pixel: 1 / PixelRatio.get(),
    /**
     *@description 获取屏幕尺寸
     */
    size: {
        width: Dimensions.get('window').width,
        height: Dimensions.get('window').height
    },
    ajax: function (obj) {
        var request = new XMLHttpRequest();
        request.onload = function () {
            return obj.success(request.responseText);
        };
        request.ontimeout = function () {
            console.log('Timeout');
            console.log(request.responseText);
            return obj.timeout(request.responseText);
        };
        request.onerror = function () {
            console.log('General network error');
            console.log(request.responseText);
            return obj.error(request.responseText);
        };
        request.open(obj.method || 'GET', obj.url);
        request.send();
    },
    fetch: function (url, params, callback) {
        fetch(url, params).then((res)=>res.text()).then(callback);
    },
    getObj: function (obj) {
        for (let i of Object.keys(obj)) {
            return console.log(i, obj[i]);
        }
    },
    timeInterval: function (start) {
        let minute = 1000 * 60;
        let hour = minute * 60;
        let day = hour * 24;
        let halfamonth = day * 15;
        let month = day * 30;
        let now = new Date();
        let diffValue = now.getTime() - start;
        let monthC = diffValue / month;
        let weekC = diffValue / (7 * day);
        let dayC = diffValue / day;
        let hourC = diffValue / hour;
        let minC = diffValue / minute;
        if (monthC >= 1) {
            result = "发表于" + parseInt(monthC) + "个月前";
        }
        else if (weekC >= 1) {
            result = "发表于" + parseInt(weekC) + "周前";
        }
        else if (dayC >= 1) {
            result = "发表于" + parseInt(dayC) + "天前";
        }
        else if (hourC >= 1) {
            result = "发表于" + parseInt(hourC) + "个小时前";
        }
        else if (minC >= 1) {
            result = "发表于" + parseInt(minC) + "分钟前";
        } else
            result = "刚刚发表";
        return result;
    },
    nslog: function (str) {
        "use strict";
        console.log(str);
    }
}
export default Utils;