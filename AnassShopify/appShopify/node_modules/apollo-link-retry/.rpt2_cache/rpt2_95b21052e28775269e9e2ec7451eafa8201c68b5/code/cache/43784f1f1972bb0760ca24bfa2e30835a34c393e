{"map":"{\"version\":3,\"file\":\"retryLink.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/retryLink.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import * as tslib_1 from \"tslib\";\r\nimport { ApolloLink, Observable, } from 'apollo-link';\r\nimport { buildDelayFunction, } from './delayFunction';\r\nimport { buildRetryFunction, } from './retryFunction';\r\nvar RetryableOperation = (function () {\r\n    function RetryableOperation(operation, nextLink, delayFor, retryIf) {\r\n        var _this = this;\r\n        this.operation = operation;\r\n        this.nextLink = nextLink;\r\n        this.delayFor = delayFor;\r\n        this.retryIf = retryIf;\r\n        this.retryCount = 0;\r\n        this.values = [];\r\n        this.complete = false;\r\n        this.canceled = false;\r\n        this.observers = [];\r\n        this.currentSubscription = null;\r\n        this.onNext = function (value) {\r\n            _this.values.push(value);\r\n            for (var _i = 0, _a = _this.observers; _i < _a.length; _i++) {\r\n                var observer = _a[_i];\r\n                if (!observer)\r\n                    continue;\r\n                observer.next(value);\r\n            }\r\n        };\r\n        this.onComplete = function () {\r\n            _this.complete = true;\r\n            for (var _i = 0, _a = _this.observers; _i < _a.length; _i++) {\r\n                var observer = _a[_i];\r\n                if (!observer)\r\n                    continue;\r\n                observer.complete();\r\n            }\r\n        };\r\n        this.onError = function (error) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var shouldRetry, _i, _a, observer;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.retryCount += 1;\r\n                        return [4, this.retryIf(this.retryCount, this.operation, error)];\r\n                    case 1:\r\n                        shouldRetry = _b.sent();\r\n                        if (shouldRetry) {\r\n                            this.scheduleRetry(this.delayFor(this.retryCount, this.operation, error));\r\n                            return [2];\r\n                        }\r\n                        this.error = error;\r\n                        for (_i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n                            observer = _a[_i];\r\n                            if (!observer)\r\n                                continue;\r\n                            observer.error(error);\r\n                        }\r\n                        return [2];\r\n                }\r\n            });\r\n        }); };\r\n    }\r\n    RetryableOperation.prototype.subscribe = function (observer) {\r\n        if (this.canceled) {\r\n            throw new Error(\"Subscribing to a retryable link that was canceled is not supported\");\r\n        }\r\n        this.observers.push(observer);\r\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\r\n            var value = _a[_i];\r\n            observer.next(value);\r\n        }\r\n        if (this.complete) {\r\n            observer.complete();\r\n        }\r\n        else if (this.error) {\r\n            observer.error(this.error);\r\n        }\r\n    };\r\n    RetryableOperation.prototype.unsubscribe = function (observer) {\r\n        var index = this.observers.indexOf(observer);\r\n        if (index < 0) {\r\n            throw new Error(\"RetryLink BUG! Attempting to unsubscribe unknown observer!\");\r\n        }\r\n        this.observers[index] = null;\r\n        if (this.observers.every(function (o) { return o === null; })) {\r\n            this.cancel();\r\n        }\r\n    };\r\n    RetryableOperation.prototype.start = function () {\r\n        if (this.currentSubscription)\r\n            return;\r\n        this.try();\r\n    };\r\n    RetryableOperation.prototype.cancel = function () {\r\n        if (this.currentSubscription) {\r\n            this.currentSubscription.unsubscribe();\r\n        }\r\n        clearTimeout(this.timerId);\r\n        this.timerId = null;\r\n        this.currentSubscription = null;\r\n        this.canceled = true;\r\n    };\r\n    RetryableOperation.prototype.try = function () {\r\n        this.currentSubscription = this.nextLink(this.operation).subscribe({\r\n            next: this.onNext,\r\n            error: this.onError,\r\n            complete: this.onComplete,\r\n        });\r\n    };\r\n    RetryableOperation.prototype.scheduleRetry = function (delay) {\r\n        var _this = this;\r\n        if (this.timerId) {\r\n            throw new Error(\"RetryLink BUG! Encountered overlapping retries\");\r\n        }\r\n        this.timerId = setTimeout(function () {\r\n            _this.timerId = null;\r\n            _this.try();\r\n        }, delay);\r\n    };\r\n    return RetryableOperation;\r\n}());\r\nvar RetryLink = (function (_super) {\r\n    tslib_1.__extends(RetryLink, _super);\r\n    function RetryLink(_a) {\r\n        var _b = _a === void 0 ? {} : _a, delay = _b.delay, attempts = _b.attempts;\r\n        var _this = _super.call(this) || this;\r\n        _this.delayFor =\r\n            typeof delay === 'function' ? delay : buildDelayFunction(delay);\r\n        _this.retryIf =\r\n            typeof attempts === 'function' ? attempts : buildRetryFunction(attempts);\r\n        return _this;\r\n    }\r\n    RetryLink.prototype.request = function (operation, nextLink) {\r\n        var retryable = new RetryableOperation(operation, nextLink, this.delayFor, this.retryIf);\r\n        retryable.start();\r\n        return new Observable(function (observer) {\r\n            retryable.subscribe(observer);\r\n            return function () {\r\n                retryable.unsubscribe(observer);\r\n            };\r\n        });\r\n    };\r\n    return RetryLink;\r\n}(ApolloLink));\r\nexport { RetryLink };\r\n//# sourceMappingURL=retryLink.js.map","dtsmap":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-retry/retryLink.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"retryLink.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/retryLink.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACL,UAAU,EACV,UAAU,EACV,SAAS,EACT,QAAQ,EACR,WAAW,EACZ,MAAM,aAAa,CAAC;AAErB,OAAO,EACL,aAAa,EACb,oBAAoB,EAErB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EACL,aAAa,EACb,oBAAoB,EAErB,MAAM,iBAAiB,CAAC;AAEzB,yBAAiB,SAAS,CAAC;IACzB,UAAiB,OAAO;QAItB,KAAK,CAAC,EAAE,oBAAoB,GAAG,aAAa,CAAC;QAK7C,QAAQ,CAAC,EAAE,oBAAoB,GAAG,aAAa,CAAC;KACjD;CACF;AAsJD,qBAAa,SAAU,SAAQ,UAAU;IACvC,OAAO,CAAC,QAAQ,CAAgB;IAChC,OAAO,CAAC,OAAO,CAAgB;gBAEnB,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAE,SAAS,CAAC,OAAY;IAQhD,OAAO,CACZ,SAAS,EAAE,SAAS,EACpB,QAAQ,EAAE,QAAQ,GACjB,UAAU,CAAC,WAAW,CAAC;CAgB3B\"}"},"dts":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-retry/retryLink.d.ts","writeByteOrderMark":false,"text":"import { ApolloLink, Observable, Operation, NextLink, FetchResult } from 'apollo-link';\r\nimport { DelayFunction, DelayFunctionOptions } from './delayFunction';\r\nimport { RetryFunction, RetryFunctionOptions } from './retryFunction';\r\nexport declare namespace RetryLink {\r\n    interface Options {\r\n        delay?: DelayFunctionOptions | DelayFunction;\r\n        attempts?: RetryFunctionOptions | RetryFunction;\r\n    }\r\n}\r\nexport declare class RetryLink extends ApolloLink {\r\n    private delayFor;\r\n    private retryIf;\r\n    constructor({ delay, attempts }?: RetryLink.Options);\r\n    request(operation: Operation, nextLink: NextLink): Observable<FetchResult>;\r\n}\r\n//# sourceMappingURL=retryLink.d.ts.map"}}
